@model clover.qms.model.PCRViewModel
@*@{
        Layout = null;
    }*@

<!DOCTYPE html>
<style>
    body {
        margin-top: 70PX;
    }

    .cell-border {
        border: 1px solid;
    }

    table.dataTable.cell-border tbody th, table.dataTable.cell-border tbody td {
        border-top: 1px solid #080707;
        border-right: 1px solid #080707;
    }

    table.dataTable.cell-border tbody tr th:first-child, table.dataTable.cell-border tbody tr td:first-child {
        border-left: 1px solid #080707;
    }

    .table > thead > tr > th {
        border-bottom: 1px solid #080707;
        border-collapse: collapse
    }

    .close {
        float: right !important;
        margin-right: 20px !important;
        margin-top: 10px !important;
        background-color: #ff1a1a !important;
        border-radius: 15px !important;
        width: 30px !important;
        /*height: 30px !important;*/
        opacity: 1 !important;
    }

    .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
        margin-left: 12%;
    }

    .modal-content {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
        margin-left: 65%;
        width: 900px;
    }
    .div2 {
        margin-top: 5px;
    }
    
    table.dataTable {
        width: 100%;
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid black;
    }

    .table > thead > tr > th {
        vertical-align: top;
    }
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        /*background-color: #FF0000;*/
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
        text-align: left;
    }

    .validation-summary-valid {
        display: none;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PCRReport</title>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    @* <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />*@

</head>
<body>
    <div>
        @using (Html.BeginForm("PCRReport", "PCRCheckList", FormMethod.Post))
        {
            Model.listPcrSchedule = ViewBag.pcrschedule;
            Model.listProjectMaster = ViewBag.projectmaster;
            Model.listPcrCheckList = ViewBag.pcrchecklist;
            Model.listparameter = ViewBag.parameter;
            Model.listusers = ViewBag.user;
            <div class="div1">
                <h3 style="text-align:center;color:darkred">PCR Report</h3>
            </div>
            <div class="form-horizontal" align="center">

                <table id="ReportTable" class="table cell-border">
                    <thead>

                        <tr bgcolor='#D3D3D3' height="30">
                            <th>Audit Finding</th>
                            <th style="width:100px">Process Area</th>
                            <th>ISO 9001 Clause</th>
                            <th>ISO 27001 Clause</th>
                            <th>Document Referred</th>
                            <th style="width:100px">Classification</th>
                            <th>Responsibility</th>
                            <th style="width:100px">Planned Closure Date</th>
                            <th style="width:100px">Actual Closure Date</th>
                            <th>Correction Done</th>
                            <th>Root Cause Analysis</th>
                            <th>Planned Corrective Action</th>
                            <th style="width:100px">Status</th>
                        </tr>
                    </thead>

                    @{ var i = 0;
                        string value = "-";
                        foreach (var item in Model.listPcrCheckList.Where(x => x.scheduleID == ViewBag.sid))
                        {

                            if (item.statusID.Equals(2))
                            {

                                <tr>

                                    @Html.HiddenFor(model => model.listpcrreport[i].scheduleID, new { Value = ViewBag.sid })
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].AuditFindind, new { htmlAttributes = new { @class = "form-control", Value = item.observation, autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].AuditFindind, "", new { @class = "text-danger" })*@
                                    </td>
                                    @foreach (var item1 in Model.listparameter.Where(x => x.parameterID == item.areaID))
                                    {
                                        <td>
                                            @Html.HiddenFor(model => model.listpcrreport[i].parameterID, new { Value = item1.parameterID })
                                            @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control", Value = item1.parameterName, autocomplete = "off" } })
                                            @*@Html.ValidationMessageFor(model => model.listpcrreport[i].parameterID, "", new { @class = "text-danger" })*@

                                        </td>
                                    }
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].ISO9001Closure, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].ISO9001Closure, "", new { @class = "text-danger" })*@
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].ISO27001Closure, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].ISO27001Closure, "", new { @class = "text-danger" })*@
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].DocumentReferred, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].DocumentReferred, "", new { @class = "text-danger" })*@
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => m.listpcrreport[i].classificationId, new SelectList(ViewBag.classification, "classificationID", "classificationName"), "Select", new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].classificationId, "", new { @class = "text-danger" })*@
                                    </td>

                                    <td>
                                        @Html.DropDownListFor(model => model.listpcrreport[i].responsibility, new SelectList(ViewBag.user, "UserName", "FullName"), "Select", new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].responsibility, "", new { @class = "text-danger" })*@
                                    </td>

                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].PlannedClosureDate, new { htmlAttributes = new { @class = "form-control date-picker", autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].PlannedClosureDate, "", new { @class = "text-danger" })*@
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].ActualClosureDate, new { htmlAttributes = new { @class = "form-control date-picker", autocomplete = "off" } })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].ActualClosureDate, "", new { @class = "text-danger" })*@
                                    </td>


                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].CorrectionDone, new { htmlAttributes = new { @class = "form-control", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].RootCauseAnanlysis, new { htmlAttributes = new { @class = "form-control", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].PlannedCorrectionAction, new { htmlAttributes = new { @class = "form-control", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => m.listpcrreport[i].statusID, new SelectList(ViewBag.schedulestatus, "scheduleStatusID", "scheduleStatusName"), new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.listpcrreport[i].statusID, "", new { @class = "text-danger" })*@
                                    </td>
                                </tr>
                                i++;
                            }
                           
                          
                            }
                        }
                </table>
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <div class="div2">
                    <input type="submit" value="Publish" class="btn btn-success" />
                </div>
            </div>
        }
    </div>
</body>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
</html>


<script src="~/Scripts/CheckBox.js"></script>
<script>
    $(document).ready(function () {
        $("#ReportTable").DataTable({ sDom: 'lrtip', "lengthChange": false })
    });
</script>