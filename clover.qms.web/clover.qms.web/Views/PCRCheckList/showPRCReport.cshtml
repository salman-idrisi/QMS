@model clover.qms.model.PCRViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<style>
    .div2 {
        margin-top: 5px;
    }

    table {
        border-collapse: collapse;
    }

    table, th, td, tr {
        border: 1px solid black;
        text-align: center;
    }

    /*.modal-header {
        background-color: #83CB1E;
    }*/

    .container .body-content {
        padding-left: 0px;
        padding-right: 0px;
    }

    .modal-content {
        height:100%;
        margin-left: 12%;
    }

    .table {
        width: 100%;
    }
</style>
<html>
<head>

    <title>showPRCReport</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        Model.listPcrSchedule = ViewBag.pcrschedule;
        Model.listProjectMaster = ViewBag.projectmaster;
        Model.listusers = ViewBag.user;
        <div class="form-horizontal" align="center">
            <center>  <h4 class="modal-header" style="text-align:center;color:#00239B"><b>PCR Report</b></h4></center>

            <table class="table" width="1200px" border="1">
                <thead>

                    <tr bgcolor='#D3D3D3' height="30">
                        <th>Audit Finding</th>
                        <th style="width:100px">Process Area</th>
                        <th>ISO 9001 Clause</th>
                        <th>ISO 27001 Clause</th>
                        <th>Document Referred</th>
                        <th style="width:100px">Classification</th>
                        <th>Responsibility</th>
                        <th style="width:100px">Planned Closure Date</th>
                        <th style="width:100px">Actual Closure Date</th>
                        <th>Correction Done</th>
                        <th>Root Cause Analysis</th>
                        <th>Planned Corrective Action</th>
                        <th style="width:100px">Status</th>
                    </tr>
                </thead>
                @{ var i = 0;
                    
                    foreach (var report in Model.listpcrreport)
                    {

                        <tr>
                            @Html.HiddenFor(model => model.listpcrreport[i].reportID, new { Value = @report.reportID })
                            @Html.HiddenFor(model => model.listpcrreport[i].scheduleID, new { Value = @report.scheduleID })
                            <td> @Html.EditorFor(model => model.listpcrreport[i].AuditFindind, new { htmlAttributes = new { @class = "form-control", Value = report.AuditFindind, autocomplete = "off" } })</td>
                            @foreach (var area in Model.listparameter.Where(x => x.parameterID == report.parameterID))
                            {
                                <td>
                                    @Html.HiddenFor(model => model.listpcrreport[i].parameterID, new { Value = report.parameterID })
                                    @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control", Value = area.parameterName, autocomplete = "off" } })
                                </td>
                                break;
                            }
                            <td> @Html.EditorFor(model => model.listpcrreport[i].ISO9001Closure, new { htmlAttributes = new { @class = "form-control", Value = report.ISO9001Closure, autocomplete = "off" } })</td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].ISO27001Closure, new { htmlAttributes = new { @class = "form-control", Value = report.ISO27001Closure, autocomplete = "off" } })</td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].DocumentReferred, new { htmlAttributes = new { @class = "form-control", Value = report.DocumentReferred, autocomplete = "off" } })</td>
                            @foreach (var classification in Model.listclassification.Where(x => x.classificationID == report.classificationId))
                            {
                                <td>@Html.DropDownListFor(model => model.listpcrreport[i].classificationId, new SelectList(ViewBag.classification, "classificationID", "classificationName", classification.classificationID), new { @class = "form-control" })</td>
                                break;
                            }
                            <td>
                                @Html.DropDownListFor(model => model.listpcrreport[i].responsibility, new SelectList(ViewBag.user, "UserName", "FullName", report.responsibility), "Select", new { @class = "form-control" })

                            </td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].PlannedClosureDate, new { htmlAttributes = new { @class = "form-control", Value = report.PlannedClosureDate.ToString("dd/MMM/yyyy"), autocomplete = "off" } })</td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].ActualClosureDate, new { htmlAttributes = new { @class = "form-control", Value = report.ActualClosureDate.ToString("dd/MMM/yyyy"), autocomplete = "off" } })</td>

                            <td>@Html.EditorFor(model => model.listpcrreport[i].CorrectionDone, new { htmlAttributes = new { @class = "form-control", Value = report.CorrectionDone, autocomplete = "off", @readonly = "readonly" } })</td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].RootCauseAnanlysis, new { htmlAttributes = new { @class = "form-control", Value = report.RootCauseAnanlysis, autocomplete = "off", @readonly = "readonly" } })</td>
                            <td>@Html.EditorFor(model => model.listpcrreport[i].PlannedCorrectionAction, new { htmlAttributes = new { @class = "form-control", Value = report.PlannedCorrectionAction, autocomplete = "off", @readonly = "readonly" } })</td>

                            @foreach (var status in Model.listschedulestatus.Where(x => x.scheduleStatusID == report.statusID))
                            {
                                <td>@Html.DropDownListFor(model => model.listpcrreport[i].statusID, new SelectList(ViewBag.schedulestatus, "scheduleStatusID", "scheduleStatusName", status.scheduleStatusID), new { @class = "form-control" })</td>
                                break;
                            }

                        </tr>
                        i++;

                    }
                }
            </table>
            <div class="div2" style="padding-bottom:15px">
                <input type="submit" value="Update" formaction="showPRCReport" class="btn btn-success" />
                <input type="submit" value="Closed" formaction="closedAudit" class="btn btn-danger" />
            </div>
        </div>
    }
</body>
</html>