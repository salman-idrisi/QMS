
@{
    Layout = null;
}


@model clover.qms.model.MetricObjective
@using clover.qms.web.Models;;
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>MetricObjectiveUpdate</title>
    <link href="@Url.ContentAbsUrl("~/Content/themes/base/jquery-ui.min.css")" rel="stylesheet" />
    <script src="@Url.ContentAbsUrl("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
    <link href="@Url.ContentAbsUrl("~/Content/buttons.css")" rel="stylesheet" />
    <script src="@Url.ContentAbsUrl("~/Scripts/CheckBox.js")"></script>
    <style>
        .btn-success {
            color: #fff;
            background-color: #5cb85c;
            border-color: #4cae4c;
        }

        .btn-danger {
            color: #fff;
            background-color: #d9534f;
            border-color: #d43f3a;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal" align="center" style="margin-top:-10px">

            <center> <h5 class="modal-header" style="text-align:center">Update Metric Objective Information</h5></center>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group" align="center">
                <div>
                    @Html.HiddenFor(model => model.metricid)
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.metricname)
                    @Html.EditorFor(model => model.metricname, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 100, placeholder = "Metric Name" } })
                    @Html.ValidationMessageFor(model => model.metricname, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    <label style="font-weight: bold;"> Lifecycle/Function</label>
                    @Html.DropDownListFor(m => m.plcid, new SelectList(ViewBag.PLC, "lifecycleID", "lifecycleName"), "Select Lifecycle", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.plcid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    <label style="font-weight: bold;"> Metric Frequency</label>
                    @Html.DropDownListFor(m => m.measurementfrequency, new SelectList(ViewBag.listfrequency, "frequencyId", "frequencyName"), "Select Frequency", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.measurementfrequency, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.mesurement_method)
                    @Html.EditorFor(model => model.mesurement_method, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 30, placeholder = "Measurement Method" } })
                    @Html.ValidationMessageFor(model => model.mesurement_method, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.datasource)
                    @Html.EditorFor(model => model.datasource, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 30, placeholder = "Data Source" } })
                    @Html.ValidationMessageFor(model => model.datasource, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.achievementexpected)
                    @Html.EditorFor(model => model.achievementexpected, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 50, placeholder = "Achievement Expected " } })
                    @Html.ValidationMessageFor(model => model.achievementexpected, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-6">
                    <lable style="font-weight: bold;"> ISO</lable>
                    @Html.DropDownListFor(m => m.isoId, new SelectList(ViewBag.listIso, "isoId", "isoName"), "Select ISO", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.isoId, "", new { @class = "text-danger" })

                    @*@Html.LabelFor(model => model.isoId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.isoId, new SelectList(ViewBag.listIso, "isoId", "isoName"), "Select ISO", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.isoId, "", new { @class = "text-danger" })
                        </div>*@
                </div>
            </div>
            <ul class="set_btn">
                <li>
                    <input type="submit" value="Save" class="btn btn-success" />
                </li>
                <li>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </li>
            </ul>

        </div>
    }
    @Scripts.Render("~/bundles/jqueryval")


</body>
</html>
