@model clover.qms.model.Users

@using clover.qms.web.Models;
<!DOCTYPE html>
<html lang="en">
<head>

    <link href="@Url.ContentAbsUrl("~/Content/ForgotPassword.css")" rel="stylesheet" />
    <link href="@Url.ContentAbsUrl("~/Content/buttons.css")" rel="stylesheet" />
</head>
<body>
    <div class="container" style="margin-top:10px">
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <div class="panel panel-default panel_set">

                    <div class="panel-body">
                        <div class="text-center">
                            <h1 class="fgt_wd"><span class="glyphicon glyphicon-lock"></span></h1>
                            <h2 class="text-center">Change Password</h2>
                            @*<p>You can reset your password here.</p>*@
                            <div class="panel-body">
                                <form id="register-form" role="form" autocomplete="off" class="form" method="post">

                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.UserName, new { @Value = User.Identity.Name.ToString() })

                                    <div style="margin-bottom: 10px; width:100%;" class="input-group">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control txt_width", autocomplete = "off", maxlength = 50, placeholder = "Old Password", onkeypress = "return RestrictSpace(event)" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "error" })
                                    </div>

                                    <div style="margin-bottom: 10px; width:100%;" class="input-group">
                                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control txt_width", autocomplete = "off", maxlength = 50, placeholder = "New Password" , onkeypress = "return RestrictSpace(event)" } })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "error" })
                                    </div>


                                    <div style="margin-bottom: 10px; width:100%;" class="input-group">
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control txt_width", autocomplete = "off", maxlength = 50, placeholder = "Confirm Password", onkeypress = "return RestrictSpace(event)" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "error" })
                                    </div>

                                    <div class="form-group">
                                        <input name="recover-submit" class="btn btn-success" style="border-radius: 50px; background:#81CB32 !important; border:none; padding:10px 40px; font-size:16px; font-weight:bold;" value="Reset Password" type="submit">

                                    </div>

                                    <div><a href=@Url.Action("WelcomeDashboard","User")><span class="glyphicon glyphicon-arrow-left"></span></a></div>
                                </form>
                                @if (ViewBag.Message != null)
                                {
                                    <script type="text/javascript">
                                            window.onload = function () {

                                            alert("@ViewBag.Message");
                                        };
                                    </script>
                                }


                             
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
@Scripts.Render("~/bundles/jqueryval")

<script>
    function RestrictSpace(event) {
        if (event.keyCode == 32) {
            event.returnValue = false;
            return false;
        }
    }
</script>