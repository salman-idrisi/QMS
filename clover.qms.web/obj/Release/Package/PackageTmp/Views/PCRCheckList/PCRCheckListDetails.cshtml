
@model clover.qms.model.PCRViewModel
@using clover.qms.web.Models;
<!DOCTYPE html>
<style>
    .error {
        color: red;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
    }

    .form-control {
        height: 25px;
    }
</style>
<html>
<head>

    <link href="@Url.ContentAbsUrl("~/Content/buttons.css")" rel="stylesheet" />

</head>
<body>
    @using (Html.BeginForm("PCRCheckListDetails", "PCRCheckList", FormMethod.Post, new { name = "myForm" }))

    {
        @Html.AntiForgeryToken()

        Model.listparameter = ViewBag.parameter;
        Model.listquestion = ViewBag.question;
        Model.lifecycle = ViewBag.lifecycleid;

        //if (ViewBag.LastUpdatedRecords!=null)
        //{
        <ul class="set_btn">
            <li>
                <a href=@Url.Action("PreviousMonthsRecords", "PCRCheckList", new { PcrScheduleId = @ViewBag.pid}) class="btn btn-success">Previous months Records</a>
            </li>
            <li>
                <a href=@Url.Action("LastUpdatedRecords", "PCRCheckList", new { PcrScheduleId = @ViewBag.scheduleid }) class="btn btn-info">Last updated checklist Records</a>
            </li>
        </ul>
        <!--}
        else
        {
            <div style="margin-bottom:5px">-->

        <!--<a href=@Url.Action("PreviousMonthsRecords", "PCRCheckList", new { PcrScheduleId = @ViewBag.pid}) class="btn btn-success">Previous months Records</a>
            </div>
        }-->
        <div class="form-horizontal table-responsive" align="center">

            <table class="table table-bordered table-hover" id="=tbl">


                @{ var i = 0; var count = 1; var rows = 0; string divId = null;
                    List<string> area = new List<string>();

                    foreach (var row in Model.listparameter.Where(x => x.lifecycleID == Model.lifecycle))
                    {
                        area.Add(row.parameterName.Replace(" ", ""));
                    }
                    foreach (var item in Model.listparameter.Where(x => x.lifecycleID == Model.lifecycle))
                    {
                        rows = 0;
                        divId = item.parameterName;
                        divId = divId.Replace(" ", "");

                        <tr :center>
                            <th colspan="5" style="background-color:#ADD8E6;text-align:center;font-size:15px">
                                Area:
                                @item.parameterName
                            </th>
                        </tr>
                        <tr style="background-color:#D3D3D3;font-size:13px">
                            <th>Sr.No</th>
                            <th>Description</th>
                            <th>Y/N/NA</th>
                            <th>Observation</th>
                            <th>Compliance</th>
                        </tr>

                        foreach (var item1 in Model.listquestion.Where(x => x.parameterID == item.parameterID))
                        {
                            var TotalQuestions = Model.listquestion.Where(x => x.parameterID == item.parameterID);
                            int rowsCount = TotalQuestions.Count();

                            rows++;
                            <tr>
                                @Html.HiddenFor(model => model.listPcrCheckList[i].scheduleID, new { Value = ViewBag.scheduleid })
                                @Html.HiddenFor(model => model.listPcrCheckList[i].areaID, new { Value = @item.parameterID })
                                <td>@count</td>
                                <td style="text-align:left;padding-left:5px">
                                    @item1.description
                                    @Html.HiddenFor(model => model.listPcrCheckList[i].questionID, new { Value = item1.questionID })

                                </td>
                                <td>
                                    <div>
                                        @Html.DropDownListFor(m => m.listPcrCheckList[i].statusID, new SelectList(ViewBag.status, "statusID", "statusName"), "select", new { @id = @divId, required = "required" })
                                        @Html.ValidationMessageFor(m => m.listPcrCheckList[i].statusID, "", new { @class = "text-danger" })
                                    </div>

                                </td>
                                <td>
                                    @Html.EditorFor(model => model.listPcrCheckList[i].observation, new { htmlAttributes = new { autocomplete = "off", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.listPcrCheckList[i].observation, "", new { @class = "text-danger" })

                                </td>
                                @if (@rows == 1)
                                {
                                    <td rowspan="@(rowsCount)" class="@(divId)">
                                    </td>
                                }
                            </tr>
                            i++;
                            count++;
                        }
                    }
                    <tr>
                        <td colspan="4" style="background-color:#ADD8E6;font-size:15px">
                            Overall Process Compliance
                        </td>
                        <td class="compliance">
                        </td>
                    </tr>
                }

            </table>
        </div>
        <ul class="set_btn">
            <li>
                <input type="submit" value="Save As Draft" formaction="@Url.Action("SaveAsDraft")" formnovalidate="formnovalidate" class="btn btn-primary" />
            </li>
            <li>
                <input type="submit" value="Submit" formaction="@Url.Action("PCRCheckListDetails")" class="btn btn-success" />
            </li>
            <li>
                <input type="submit" value="Cancel" formaction="@Url.Action("AuditorDashboard","PCRCheckList")" formnovalidate="formnovalidate" class="btn btn-danger" />
            </li>
        </ul>
        <script>
            var array = @Html.Raw(Json.Encode(area));
        </script>


    }

    <script src="@Url.ContentAbsUrl("~/Scripts/AgeCompliance.js")"></script>
</body>
</html>
@Scripts.Render("~/bundles/jqueryval")