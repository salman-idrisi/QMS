@model clover.qms.model.PCRViewModel
@using clover.qms.web.Models;
<!DOCTYPE html>
<style>

    .w-120 {
        width: 120px;
        overflow: hidden;
        white-space: nowrap;
        display: inline-block;
    }

    .close {
        float: right !important;
        margin-right: 20px !important;
        margin-top: 10px !important;
        background-color: #ff1a1a !important;
        border-radius: 15px !important;
        width: 30px !important;
        opacity: 1 !important;
    }


    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
        text-align: left;
    }

    .validation-summary-valid {
        display: none;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.ContentAbsUrl("~/Content/buttons.css")" rel="stylesheet" />
    <script src="@Url.ContentAbsUrl("~/Scripts/ReportDate.js")"></script>

</head>
<body>
    <div>
        @using (Html.BeginForm("PCRReport", "PCRCheckList", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            Model.listPcrSchedule = ViewBag.pcrschedule;
            Model.listProjectMaster = ViewBag.projectmaster;
            Model.listPcrCheckList = ViewBag.pcrchecklist;
            Model.listparameter = ViewBag.parameter;
            Model.listusers = ViewBag.user;
            <div class="div1">
                <h3 style="text-align:center;color:#00239B">Audit Report</h3>
            </div>
            <div class="form-horizontal table-responsive" align="center">

                <table id="ReportTable" class="table table-bordered table-hover">
                    <thead>

                        <tr bgcolor='#D3D3D3'>
                            <th>Audit Finding</th>
                            <th>Process Area</th>
                            <th>ISO 9001 Clause</th>
                            <th>ISO 27001 Clause</th>
                            <th>Document Referred</th>
                            <th>Classification</th>
                            <th>Responsibility</th>
                            <th>Planned Closure Date</th>
                            <th>Actual Closure Date</th>
                            <th>Correction Done</th>
                            <th>Root Cause Analysis</th>
                            <th>Planned Corrective Action</th>
                            <th>Status</th>
                        </tr>
                    </thead>

                    @{ var i = 0;
                        string value = "-";
                        foreach (var item in Model.listPcrCheckList.Where(x => x.scheduleID == ViewBag.sid))
                        {

                            if (item.statusID.Equals(2))
                            {

                                <tr>

                                    @Html.HiddenFor(model => model.listpcrreport[i].scheduleID, new { Value = ViewBag.sid })
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].AuditFindind, new { htmlAttributes = new { @class = "form-control w-120", Value = item.observation, autocomplete = "off" } })

                                    </td>
                                    @foreach (var item1 in Model.listparameter.Where(x => x.parameterID == item.areaID))
                                    {
                                        <td>
                                            @Html.HiddenFor(model => model.listpcrreport[i].parameterID, new { Value = item1.parameterID })
                                            @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control w-120", Value = item1.parameterName, autocomplete = "off" } })


                                        </td>
                                    }
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].ISO9001Closure, new { htmlAttributes = new { @class = "form-control w-120", autocomplete = "off" } })

                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].ISO27001Closure, new { htmlAttributes = new { @class = "form-control w-120", autocomplete = "off" } })

                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].DocumentReferred, new { htmlAttributes = new { @class = "form-control w-120", autocomplete = "off" } })

                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => m.listpcrreport[i].classificationId, new SelectList(ViewBag.classification, "classificationID", "classificationName"), "Select", new { @class = "form-control w-120" })

                                    </td>

                                    <td>
                                        @Html.DropDownListFor(model => model.listpcrreport[i].responsibility, new SelectList(ViewBag.user, "UserName", "FullName"), "Select", new { @class = "form-control w-120" })

                                    </td>

                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].PlannedClosureDate, new { htmlAttributes = new { @class = "form-control w-120 date-picker", autocomplete = "off", @readonly = "readonly" } })

                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].CorrectionDone, new { htmlAttributes = new { @class = "form-control w-120", Value = value, autocomplete = "off", @readonly = "readonly" } })

                                    </td>


                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].CorrectionDone, new { htmlAttributes = new { @class = "form-control w-120", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].RootCauseAnanlysis, new { htmlAttributes = new { @class = "form-control w-120", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.listpcrreport[i].PlannedCorrectionAction, new { htmlAttributes = new { @class = "form-control w-120", Value = value, @readonly = "readonly" } })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => m.listpcrreport[i].statusID, new SelectList(ViewBag.schedulestatus, "scheduleStatusID", "scheduleStatusName"), new { @class = "form-control w-120" })

                                    </td>
                                </tr>
                                i++;
                            }


                        }
                    }
                </table>
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
            <ul class="set_btn">
                <li>
                    <input type="submit" value="Publish" formaction=@Url.Action("PCRReport") class="btn btn-success" />
                </li>
            </ul>

        }
    </div>
</body>

@Scripts.Render("~/bundles/jqueryval")
</html>



@*<script>
        //$(document).ready(function () {
        //    $("#ReportTable").DataTable({ sDom: 'lrtip', "lengthChange": false })

        //});
        $(document).ready(function () {
            $(function () {

                $(".date-picker").datepicker({

                    minDate: '0',
                    controlType: 'select',
                    oneLine: true,
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "c-100:c+100", // You can set the year range as per as your need
                    dateFormat: 'dd-M-yy'

                });

            });
        }
    </script>*@