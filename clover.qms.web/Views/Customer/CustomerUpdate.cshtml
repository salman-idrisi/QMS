@model clover.qms.model.Customer
@using clover.qms.web.Models;
@{
    Layout = null;
}

<link href="@Url.ContentAbsUrl("~/Content/themes/base/jquery-ui.min.css")" rel="stylesheet" />
<script src="@Url.ContentAbsUrl("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
<link href="@Url.ContentAbsUrl("~/Content/buttons.css")" rel="stylesheet" />
<script src="@Url.ContentAbsUrl("~/Scripts/CheckBox.js")"></script>
<style>
    .btn-success {
        color: #fff;
        background-color: #5cb85c;
        border-color: #4cae4c;
    }

    .btn-danger {
        color: #fff;
        background-color: #d9534f;
        border-color: #d43f3a;
    }

    p {
        font-weight: bold;
        margin-bottom: 0px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" align="center" style="margin-top:-10px">
        <center> <h5 class="modal-header" style="text-align:center">Update Customer Information</h5></center>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group" align="center">
        @*<div class="col-md-1">

        </div>*@
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight:bold"> *</h7><lable style="font-weight: bold;">Customer 1 Name</lable></p>
                @Html.EditorFor(model => model.customername, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Name" } })
                @Html.ValidationMessageFor(model => model.customername, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;"> Customer 1 Email</lable></p>
                @Html.EditorFor(model => model.customeremailid, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Email 1" } })
                @Html.ValidationMessageFor(model => model.customeremailid, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;"> Customer 1 Designation</lable></p>
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Designation 1" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight:bold"> </h7><lable style="font-weight: bold;">Customer 2 Name</lable></p>
                @Html.EditorFor(model => model.customername2, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Name2" } })
                @* @Html.ValidationMessageFor(model => model.customername, "", new { @class = "text-danger" })*@
            </div>

            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 2 Email</lable></p>
                @Html.EditorFor(model => model.customeremailid2, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Email 2" } })
                @*  @Html.ValidationMessageFor(model => model.customeremailid2, "", new { @class = "text-danger" })*@
            </div>

            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 2 Designation</lable></p>
                @Html.EditorFor(model => model.designation2, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Designation 2" } })
                @*  @Html.ValidationMessageFor(model => model.designation2, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight:bold"> </h7><lable style="font-weight: bold;">Customer 3 Name</lable></p>

                @Html.EditorFor(model => model.customername3, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Name3" } })
                @* @Html.ValidationMessageFor(model => model.customername3, "", new { @class = "text-danger" })*@
            </div>
            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 3 Email</lable></p>
                @Html.EditorFor(model => model.customeremailid3, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Email 3" } })
                @*   @Html.ValidationMessageFor(model => model.customeremailid3, "", new { @class = "text-danger" })*@
            </div>
            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 3 Designation</lable></p>
                @Html.EditorFor(model => model.designation3, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Designation 3" } })
                @*     @Html.ValidationMessageFor(model => model.designation3, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight:bold"> </h7><lable style="font-weight: bold;">Customer 4 Name</lable></p>

                @Html.EditorFor(model => model.customername4, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Name4" } })
                @*  @Html.ValidationMessageFor(model => model.customername4, "", new { @class = "text-danger" })*@
            </div>

            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 4 Email</lable></p>
                @Html.EditorFor(model => model.customeremailid4, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Email 4" } })
                @*    @Html.ValidationMessageFor(model => model.customeremailid4, "", new { @class = "text-danger" })*@
            </div>
            <div class="col-md-4">
                <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Customer 4 Designation</lable></p>
                @Html.EditorFor(model => model.designation4, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Designation 4" } })
                @*  @Html.ValidationMessageFor(model => model.designation4, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Customer Organization</lable></p>
                @Html.EditorFor(model => model.customerorganization, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Customer Organization" } })
                @Html.ValidationMessageFor(model => model.customerorganization, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Quality SPOC</lable></p>
                @Html.EditorFor(model => model.qualityspoc, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Quality SPOC" } })
                @Html.ValidationMessageFor(model => model.qualityspoc, "", new { @class = "text-danger" })

            </div>
            <!--<div class="col-md-4">
        <p><lable style="font-weight: bold;">User Department</lable></p>
        @Html.DropDownListFor(m => m.loggedInUserDepartmentId, new SelectList(ViewBag.userDepartments, "Value", "Text"), "Select Department", new { @id = "DropDownLoggedInUser", @class = "form-control", @readonly = "readonly" })-->
            @*@Html.ValidationMessageFor(m => m.loggedInUserDepartmentId, "", new { @class = "text-danger" })*@
            <!--</div>-->
            @* <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Project Name</lable></p>

            </div>*@

            <!--<div class="col-md-4">-->
            @* @Html.LabelFor(model => model.domainId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <!--<p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Domain Name</lable></p>-->
            @*@Html.DropDownListFor(m => m.domainId, new SelectList(ViewBag.Domains, "Value", "Text"), "Select Domain", new { @class = "form-control" })*@
            <!--</div>-->
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Department Name</lable></p>
                @Html.DropDownListFor(m => m.departmentId, new SelectList(ViewBag.Departments, "Value", "Text"), "Select Department", new { @id = "DropDownDepartment", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.departmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Project Name</lable></p>
                @Html.DropDownListFor(m => m.pidf, new SelectList(ViewBag.projectname, "Value", "Text"), "Select Project", new { @id = "DropDown", @class = "form-control", @onchange = "return get_sbu(this)" })
                @Html.ValidationMessageFor(model => model.pidf, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @* @Html.LabelFor(model => model.domainId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;">Domain Name</lable></p>
                @Html.DropDownListFor(m => m.domainId, new SelectList(ViewBag.Domains, "Value", "Text"), "Select Domain", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.domainId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <p>@*<h7 style="color:red;font-weight: bold"> *</h7>*@ <lable style="font-weight: bold;"> Group Email ID</lable></p>
            @Html.EditorFor(model => model.Groupemailid, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", maxlength = 250, placeholder = "Group Email ID" } })
            @*    @Html.ValidationMessageFor(model => model.customeremailid4, "", new { @class = "text-danger" })*@
        </div>
        @*<br />*@
        @*<br />*@
        <br />

        <div class="col-md-12">
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Manager Name</label>
                <input type="text" id="managername" name="managername" value="" readonly class="PO_GH" style="width:255px" />
            </div>
            <br />
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Project Manager Email ID</label>
                <input type="text" id="pmanageremailid" name="pmanageremailid" value="" readonly class="PO_GH" style="width:255px" />
            </div>
            <br />
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Project Delivery Manager Name</label>
                <input type="text" id="pdeliverymanagername" name="pdeliverymanagername" value="" readonly class="PO_GH" style="width:255px" />
            </div>
            <br />
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Project Delivery Manager email ID</label>
                <input type="text" id="pdeliverymanageremailid" name="pdeliverymanageremailid" value="" readonly class="PO_GH" style="width:255px" />
            </div>
            <br />
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Project Delivery Head Name</label>
                <input type="text" id="pdeliveryheadname" name="pdeliveryheadname" value="" readonly class="PO_GH" style="width:255px" />
            </div>
            <br />
            <div style="display:flex; flex-direction: row; justify-content: center; align-items: center">
                <label class="FieldGH col-md-6">Project Delivery Head EmailID</label>
                <input type="text" id="pdeliveryheademailid" name="pdeliveryheademailid" value="" readonly class="PO_GH" style="width:255px" />
            </div>

            <ul class="set_btn">
                <li>
                    <input type="submit" value="Update" class="btn btn-success" />
                </li>
                <li>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </li>
            </ul>
        </div>

    </div>
    </div>

}
<script type="text/javascript">

    $(document).ready(function () {
        return get_sbu(this)();
    });

    function get_sbu() {

        var selected_val = $('#DropDown').find(":selected").attr('value');
        if (selected_val != 0) {
            $.ajax({
                type: "POST",
                url: "/Customer/selectSBU",
                data: "id=" + selected_val,
                success: function (data) {
                    if (data.length > 0) {
                        $('#pmanageremailid').val(data[0].pmanageremailid);
                        $('#pdeliverymanagername').val(data[0].pdeliverymanagername);
                        $('#pdeliverymanageremailid').val(data[0].pdeliverymanageremailid);
                        $('#pdeliveryheadname').val(data[0].pdeliveryheadname);
                        $('#pdeliveryheademailid').val(data[0].pdeliveryheademailid);
                        $('#managername').val(data[0].FirstName + " " + data[0].LastName);
                    }
                    else {
                        $('#pmanageremailid').val('');
                        $('#pdeliverymanagername').val('');
                        $('#pdeliverymanageremailid').val('');
                        $('#pdeliveryheadname').val('');
                        $('#pdeliveryheademailid').val('');
                        $('#managername').val('');
                    }

                }
            });
        }
    }
</script>
@Scripts.Render("~/bundles/jqueryval")
