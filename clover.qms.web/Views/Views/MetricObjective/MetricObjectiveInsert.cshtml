
@{
    Layout = null;
}


@model clover.qms.model.MetricObjective
@using clover.qms.model;

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/buttons.css" rel="stylesheet" />
<script src="~/Scripts/CheckBox.js"></script>





<style>
    .btn-success {
        color: #fff;
        background-color: #5cb85c;
        border-color: #4cae4c;
    }

    .btn-danger {
        color: #fff;
        background-color: #d9534f;
        border-color: #d43f3a;
    }
</style>

@using (Html.BeginForm() )
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" align="center">
    <center> <h5 class="modal-header" style="text-align:center">Add Metric Objective Information</h5></center>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" align="center">
        @Html.LabelFor(model => model.metricname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6" align="center">
            @Html.EditorFor(model => model.metricname, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = 50, @placeholder = "Metric Name", @style = "color:#909;" } })
            @Html.ValidationMessageFor(model => model.metricname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" align="center">
        @Html.LabelFor(model => model.plcid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">

            @*<p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;"> Lifecycle</lable></p>*@
            @Html.DropDownListFor(m => m.plcid, new SelectList(ViewBag.PLC, "lifecycleID", "lifecycleName"), "Select Lifecycle", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.plcid, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" align="center">
        @Html.LabelFor(model => model.measurementfrequency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">

            @*<p><h7 style="color:red;font-weight: bold"> *</h7> <lable style="font-weight: bold;"> Metric Frequency</lable></p>*@
            @Html.DropDownListFor(m => m.measurementfrequency, new SelectList(ViewBag.listfrequency, "frequencyId", "frequencyName"), "Select Metric Frequency", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.measurementfrequency, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" align="center">
        @Html.LabelFor(model => model.mesurement_method, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6" align="center">
            @Html.EditorFor(model => model.mesurement_method, new { htmlAttributes = new { @class = "form-control", @placeholder = "Measurement Method", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.mesurement_method, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" align="center">
        @Html.LabelFor(model => model.datasource, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6" align="center">
            @Html.EditorFor(model => model.datasource, new { htmlAttributes = new { @class = "form-control", @placeholder = "Data Source", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.datasource, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" align="center">
        @Html.LabelFor(model => model.achievementexpected, htmlAttributes: new { @class = "control-label col-md-2", @autocomplete = "off" })
        <div class="col-md-6" align="center">
            @Html.EditorFor(model => model.achievementexpected, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @maxlength = 100, @placeholder = "Acheivement Expected" } })
            @Html.ValidationMessageFor(model => model.achievementexpected, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" align="center">
        @Html.LabelFor(model => model.isoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">

        
            @Html.DropDownListFor(m => m.isoId, new SelectList(ViewBag.listIso, "isoId", "isoName"), "Select ISO", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.isoId, "", new { @class = "text-danger" })
        </div>
    </div>
    <ul class="set_btn">
        <li>
            <input type="submit" value="Save" class="btn btn-success" />
        </li>
        <li>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </li>
    </ul>
</div>
    }
    @Scripts.Render("~/bundles/jqueryval")

